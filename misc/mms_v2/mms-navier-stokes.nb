(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    138584,       3000]
NotebookOptionsPosition[    135683,       2904]
NotebookOutlinePosition[    136018,       2919]
CellTagsIndexPosition[    135975,       2916]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.692146257332653*^9, 3.692146263845531*^9}}],

Cell[CellGroupData[{

Cell["Manufactured solution", "Section",
 CellChangeTimes->{{3.692146273476684*^9, 3.692146276836258*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u0", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v0", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"et0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "1.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cv", "=", 
   RowBox[{"R", "/", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", "-", "1"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.692296160910193*^9, 3.692296230736656*^9}, {
   3.6922965425232*^9, 3.692296550506919*^9}, {3.69229662105764*^9, 
   3.692296623441596*^9}, {3.692296912212097*^9, 3.692296927596114*^9}, 
   3.6922976307533216`*^9, {3.692301439795361*^9, 3.6923014442743387`*^9}, {
   3.692302841389168*^9, 3.692302857414448*^9}, {3.692473731385594*^9, 
   3.6924737340893373`*^9}, {3.69247380464089*^9, 3.692473860414918*^9}, 
   3.692646500764804*^9, 3.692647411137904*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Only", " ", "considering", " ", "a", " ", "steady", " ", "solution", " ", 
    "for", " ", "now"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.692309288508861*^9, 3.6923092900076857`*^9}, {
  3.692312854226757*^9, 3.6923128646609297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cv", "=", 
   RowBox[{"R", "/", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", "-", "1"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.692303565525141*^9, 3.692303571885964*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"\[Rho]0", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "+", " ", 
       RowBox[{"y", "^", "2"}], " ", "+", " ", 
       RowBox[{"\[Omega]", " ", "t"}]}], "]"}], "+", 
     RowBox[{"3", "/", "2"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"u0", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}], "+", 
       RowBox[{"\[Omega]", " ", "t"}]}], "]"}], "+", "\[Epsilon]"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"v0", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}], "+", 
       RowBox[{"\[Omega]", " ", "t"}]}], "]"}], "+", "\[Epsilon]"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"et", "[", 
    RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"et0", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}], "+", 
        RowBox[{"\[Omega]", " ", "t"}]}], "]"}], "+", 
      RowBox[{"3", "/", "2"}]}], ")"}]}]}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"this", " ", "is", " ", "\[Rho]", 
     RowBox[{"(", 
      RowBox[{"e", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}], ")"}]}]}], ")"}]}], "=", "\[Rho]E"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"et", "[", 
     RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/", "cv"}], "-", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "cv"}], ")"}]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "^", "2"}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", "R", " ", 
   RowBox[{"T", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Nu]", "[", 
   RowBox[{"x_", ",", "y_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"\[Mu]", "/", 
   RowBox[{"\[Rho]", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.692146279888876*^9, 3.6921463263088093`*^9}, {
  3.692146364580002*^9, 3.692146452939887*^9}, {3.692295628654543*^9, 
  3.6922956309017897`*^9}, {3.692295871713215*^9, 3.692295997109846*^9}, {
  3.692296118355487*^9, 3.692296136243382*^9}, {3.692296515427986*^9, 
  3.692296651433354*^9}, {3.692303504046432*^9, 3.692303511823802*^9}, {
  3.6923105080024633`*^9, 3.692310521842319*^9}, {3.6924599125687313`*^9, 
  3.692459967918139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "0.1"}], ",", "0.7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0.1", ",", "0.5"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.69247919096181*^9, 3.692479211874319*^9}, 
   3.692479333154743*^9, {3.692484424233912*^9, 3.692484442216023*^9}, 
   3.692646494473394*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
59+Yi54hfgODP0c+stGzBolfSEhr2UJz9AzxSz86flmwBfMVVST+9LVl0Y3z
0HMwiX/MNpdb1Er0DPEH5U+WGxqHnlOPN23ktntBWU1dYePEeA+azV8S6674
gioodt6QEomeF7e5fPnzp4HyDii2FopEzx9jqrc4FTdQC2s/BXxkfO+7uVsi
dcingerYHutzhvH9+tRU21+2ug1Ug43422Xu6FmxvHjXgGAD1SITXFFohZ5/
/0eeM43EL68sXRP3DdfREL/M6vlLbVLQ8xISf+nerccll6NniF/hl4pGYDh6
vkXiX1MaFclbhXmh0yT+2gO5rJQazAtB/HK7hQYPhGP+zSdM201ycyPlkvKu
dwrj+/VW3YSXifyNlNnFW5a5Puh5Ku/AChEWZ97kJlGq4oOe2eT5rKIDuxoZ
dQKRrqHtggdfUlJP9iqxnNDzvrXdisGSL6kVz1p23jJHz2JfV4fw976gwni0
ty3ZjZ47/iPP6Uvij8tXdKh7gp4h/sVvY40iTNGzAIk/xzhu/oS3mK+A+L8/
ThFcqoKeo0j8n3aLRUabo+f9JP5Mt/KEZCP0DPEfDazozZyFni0LCwuURV5R
taaG77ZaMr5DOUwVKmhvopw/PPp43RY9f5UztlTMaKJK2Jeu2Nmi5/z+W09z
zZsoybaA9+UW6Nn58vi5K1c2UZuqFDRnGqNnpcN77HOGGqmY/baju3XQ87i5
l6tlChopnYbWBf2y6Ln0P/KcViT+5jKufQ2e6Bnij3KKPdArgp6/kfjjl+1M
sghBzxC/0s/hZXGtmBdyIfFfqh7W0viNeSFlEv8yPf9yoS7Mv0H8AZF3S7Nm
Y55zZ8+KnwcGXlPmycrnw7UZ65RL7jubcl9TZi4243/sRM9NB9hX9JxeU/c7
JzvP3IWeE2Yt4GIpv6bGXHncI7sVPRux7A10uV9TZUFcN29T6FkK1mdawQVr
pNFzz+Y5/JuDX1FpKhulnLnQ89X/yHPuIvGfnXLLXHAdeob4R5Uk1Xc+xbzQ
KxJ/3fmFP1uXo2eIf6zUtxgHK/RsTOIvcbBjl59Fz/PJ/fxn1Xs06aFniL9P
SnPd444K2vOaaZcUnIpbKOv6fJuiueiZrg+UXmxQtxA9F3qp99rqtlB/ZM3H
2C5Cz+6kLpH3S/InfQn0rPa7N9q8qZny77ae+nsKox7j7rrPPYnN1Bx+reEx
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
0x7Cr2R8Grwanpr5Ptvza0/g/9/jv+L8NQUfvx/+3cyxdEXys+iaXxQ5nrys
mIh/J/O8KJ5tx6rBR+M7hnXbd8nPuyt/5juS10wT/h7J8UT5cTHXORr+Hl6V
OSavhxdljmOrlMu4Xj24Nv7SsHZcrVzJMbU1P/DKzDF2Hbw73+PKX0syx1vF
4135/lU++irzM6+Bv84c29cqL+SxQvlrdeYYrr37c75/Fe/XZ36eDRyzIY8D
m+AfM+/9jcnaoQXcmPteHa6TpSW24hsXOUdvyePG5mR9cT7cRu8zjw/Kfdvy
GKL82CtcA0uH7Myvr1xZNrk+kq47LLmekpYrk1z7SMv9xfFtipx//8zzmvLv
33nOkgboG66ZpZEOSI7/0gP7Y52LrDf2S84R0g/FyfFT2uafPCdK25RIjp/S
Gyn5d0nnlEyOsYrJ0mJXwZ21eZJzqPLS3jz/SgtJo6kGuZZjrg/XOdJspZPz
l/T4ocm1nnTsIcnXlC59MV/z3yin57ngf3VnuHaStiyVnPelbcol10qqmQ5M
zomFXIfeBd+i3JFcX0sD/x2Oj3XD+2NnvkcWMlaryDp2YHJMlgYblBxvT4Nv
lQaFG8DPh/WK9Kp06wpdh3vdnByrT2X8puT4X096Nlnn14AHJMd5PUOP5Pri
eOXP5BwhTdgzucavKa2dXL9XCush5YU6ef7U83yo3JXcc5COrQ8PK7Lea5Bc
70vr/iv5nUi3t0vWHuXg25JjaUNpWOlazTXcW5oPrgWPCdfGytd9pIkZPxHu
B78HnwRfl5wTa+f5XOe+zrNdlFzLHC3dnqyRKsIdOeY2eID0ITwI7g93gm+H
b1QehwfDA+HO8BD4NrgLfA88WLEFHgrfDl8Fj4TvgS+E74Rvhi+D71U8g7vB
D8BDtcfhB+F74QvgO+Cb4Evgu+FB0kyZf+8suHtyjVad579aOhiuKo0f7ilI
w3RK1oRHwRfAE+AK+nv4mVSndEvu1VRT/ZHc5zkOHpb5/c/W72J8Knws48Mz
v+c3pD+Te0RVGL8suS9UGf4scy2smqgGdkuRazfVRg/Dwzh3Rua+meqy6Zn7
Y6q/Pspcd6sWeDNzbSutOCdz3SpN+EHmOle6/cPM9bXqOOlU6VVpvNcz9+hU
672Xx3DlmrmZa17pzPcz18XSgW9lrpelRWdl7hVIZ87O3EOQzvw0c29BenJ+
5p6DdN2CzPW+9OfSPOYrX3yeuT+pevaLzH3LJ+HlmXuVT2v/Ze5jqB6Zmbl/
KK37Zea+6H/gbzP3RZ+Bl2XuhT4Fr8jcw3wW/g5uBD8H78nc85yYXL+O1jPw
PO2TNX955uKM5LlQHfpguK+kOrcV4/8ucj3eMrm+UC35RLg3IV19dnIdobqy
SXJ/r0yuu7VOJnCvtsn3PVLxMrkGUR9gcLJ2agTfnqypGkt7Z+6vvsDYr5n7
rhPgdZl7tmPhLLlPNQn/B+OXwC/ChTyeK/5XT+5/qj/wQ+a+7hjG1uT5V7l4
M9YaHsf42sy94tHwpsw92OfhXzL3YMfDOzLnF+Xu38P6TzFnX/7Wk/GX9Dxh
Xav40yXcP9LcdQ73gDRfXcM9a92reXIvax6+anJMeF35JNzP0tq4MtxX0pxe
Fe5967dcHu5zaT10C/fH9X5GhmPKB3ALbDzX/AR/Xbh/rXd1bbjfrXfbOrlX
OR9fOTmmvYZvltx3+hh/bHL8eRVfD3sCfhdfDbsPnonvHe5fa70dlxwDZ2h9
hfuPus4V4b6Y1mqfcI9b8zgiHCvfhx8L9y4/hR8P9/4WaD2Ge2SfKWaHa2/p
uqsUC7jX58on4Rj9RrJuXlvk2kE1hXTu5Mw6X1pYGvTRcP9U7+epcG9xkdZ7
uO+2EL4zzw2z4dvD9ZV+7+Bwn1Tz1S/8jUFr4P5w3fUe3Ca5x6vfMjwc9/Xe
hoXzxDvaQ+F+8WLtoXCfV+vhoXDv+CP4jnBOmgU3Te4TarxKct6Zjq+ZXOvp
mCOSe+PSKkfme0GapHxyXnsZPyVcW0rrTg7Xn9LApyT3k/VsL4VrUenbrsm1
/1KtF8ZVmEnrjgv3C6TzKyTn0Mn4qeEaVTp8bLh3sAyeGO5lSKu/Eq6HpYEP
Tu5FS49NCPdKVHd0TO6Hay6OTs6J0/AVk/PyVK3BcA5+G34u3EPXehgd7ol/
AR+VnLun6BnDfWetz1fD9bz09vnYjCKvgVrJeVlrqW5y//wt/MnJfXjd6/Tk
Pu2H+MbJPWrtuxOS877WTMPkPrbWQ6PknrzW+QPhfK9zz03u/2ud107WAG/i
uyT3/5fg6yR/R5iL75D8HUF74ZrwNzPFzO7hb2CKXc+Gvzdovu4N6xU9f6Vk
HfKKniv8HULXPzH5m8IcfOfk7whakz3D39IUA3uEv5kpZg4JaxQdPyrcr1cM
uTXc31cM2R7uHUiTqIem/fcnfluuIaQxZoR7XqpftuaaQ1rihuQ+m9bMz+F+
hPTJr+FehjTqpvD3J2nRHeH+hbTQ5nBPRFrll3C/Q1p3Z7h/IR27NvwdS7lp
T7i2l868JNxDV47uH/7OofV8Q/j7h/bOoPB3Du27SeHaUrXkLeFvHoqTr4V7
RqrphoY1nOauV3JfUWvypvB3Ec3FgPB3FK3PF8K1tOrxG8PfbLTmB4a/kWjN
3x3WplonW8K6ULprXfhbnfL7D+FveNLVv4X7FNLDu8O9G2np4mLX8NLbJYrd
W1FeLlns+kd5eR94Sua6W159C/UBNoS/GUg/6+OI+jiqL1KxezGqTQrF7tGo
BtkY/oYh7R3F7umolhkfrv9V768PfzuURv0x/B1C2vW/58vM/g==
          "]], 
         Polygon3DBox[CompressedData["
1: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
wUeU9AtyllxzcAmXyRFyxZEl/cIqNfp5T2sHeNEaPbUV+A3w4jV6bJuSfsJn
7rPfpURPyukXgvct4frFavTa1iX9hhpBrbBpid42hy8C71eS234+uXVIib7Z
pds/Z5bc721ruPbEEj5W/x8sF4OHmvs1+mdwiX7z81hr9inRj6O10ev7NukX
Rm6j/dSA1l9rgrVh0ZJ+ZfyuPixSovfH6fbPgiX9yWidfpirpJ8br9tPC5f0
N/PW6PtNSvrBtWvq9wEl+m9gjZ44sEQ/rlbT3+1dom+tcReD9y+pfdYY99oh
JbVn1Zp+dK8SvTt/jT4fVNKfrVujDw8q0fc+b7nzqJJ8tGZYS48uyS81z2Lm
bom+moP1Q6xt4MPAc4GHgjcCHwFeEnwyeHvwsLbT7OAfm2j5JVg/Cbwd8yd0
++dE8Lbg48FLgU8B7wA+sU3Oqq1n73J5YfBx4C3Ax7bpEdR6PzTpHcxvc//7
Jr3FtT53+YtxnTFjOeIxeb2R9e9K+rEJeL0VvA1jebnT38HctyX9/PhyI2vf
lPTX4/F6c5s9pxZ4spe9OGFJb+fv9Hd/VdLvj8vrTVw7J9ccCt4QfDh4upJe
xJon8csZ5xDuXsIl03T7b1XwgeBZwAeB1wEf0kZf2uusAT4IvExN/6FJYb+4
fE3/snNJfzY3+DDwxuAjwcvV9Hs7lfSbM4L3B68JHgze0mfU5J5572Zm/UDi
tYkPbqNR1Ka7lWgX81/tuWtXC7bymVtLfQYlGvZY4s1LtK0a9Rjw/0q069bu
oSY99xfMzcT6AcRrEQ/p+OJo8GYlvcZfNfpitSb1/uru89sD2t/8UPPZ/Q7q
r+38zMRruif5HcuCRwJPAL4dvAV4IWsf+KOOM+/s9JTcsxF4ZvDc4FdYXxM8
GXga8KMlmu4quaUXrbeTHMb6ZpYo8O/gOzo9tnNND2EvoWbesSZnzm7CgeaS
OXJWEw41d34D396Ew3eqqX/W3qakt5Ij7IXlZLlDDrD3lXPlBjnvzO73yYXm
2DlNOMXc+xd8v72WHFLjAd0HfrzXeUOMT4g/ZbxO3CIWHmX9WTmp5jv73T9m
vCq3yFu9aNxXwLuYY1y/C3ismh7A2mkNHV7jmWzbxGPRS1GMPNDl197gvVnf
GzwY3B88mPF1Lznu+/WY7mX9sV68Jz2he5p4FnpFejYbNNGwejn2APYCeiiL
Wl/7JJ/VxGrjCn4E/Iw1qaYn1osoJb2yOadXZI9nLupJ7dOkpuhVWSOPaOJZ
WTutYRd2+t7aJmce24Qz5VI5We/FnJWrzdHjmnCiuSvnndKEI+RCezJ7M2uI
XpA5Zq87dknu2YPai6oRdqjpyfQqrSn2atb4Kzv9bC04l7FQLz22vbYcc1gT
zpV71Bh6adYYtceh4MPBx4NnBY/M2I54jhJ/Uo1xRdffqT3kEL2FsUq4RY2g
XyBnyB32sPay1kC9JnvkG7t+Sn79GXxLE42zfQ3H6Y1ZU+U+OU4vSk0h96mB
Lm2iYdRGahS9T2uOtceeaeEmPdFPXQ3Wi5FDrc32b3LXFCXejRypN2dNlTvt
gVZq0oPZG+mx6LWoWbap8WD0YtQgW9f0cHo3akh7uz9r+rlVm/Q3apQLOv2s
dlED6CXJ0WoDPQa9Bmv4VuALarjKHt9efwT26xNNNN9BrPUBPwZ+DnxATb+r
Ht4GPGGN5zAV8Z9NvAg1qdr09yZenZ7fAPAfTbxANY5e7Oa9aB89Wr1aez69
X/vt9Tq+M7/VPHq79nBqITXuwK7eqX3VSHrf9oRqp33aaLEhXf5bT/Ujluil
HlsT9H7GKakV1mz9mcV7qbfW5Hma9MzfdDV37iYewlddDZ+3iaaxttvjH9hE
w9j7D6jxr1dibb82GlAtaL+oN6OGGtLlu9pKDae3r2ejthve8YE1ylplD3FA
k5pvb6GGHNT1I2pLNaTesf2R2tIaf1CTGm3t11NRH2zai39hT7Ak8UQlvYKe
2h5NaqRemx6T/e1+HR/p0e3VRDPo3XkPvZf9SrSOfudmTXLWflgPSC9q5BJv
SE9vzyY1X6/v1e75qLHV2n3ZX4+DnwcfWONx6k3/1MT7VGPp95nz5r6ekl7y
SCVekx6eXmdbwjfW6MU7vfBbpwnP7OqZ+apmOqaJhlRLyTGehej5yD3qKfWb
PZK9kmcUnlXoGY1a40HpJeo56E3pQXhWosbTm7An8SzEMwR7FT1Dvdta4iXq
KXkWoqbTa9Kz8KxHvfdvp5kO6Z6/WkqPyrMeNaPelZ6G+lB9qd7T49X7/7mJ
96uH4lmEHofeiv2zfrEaWC2sBzNbk55Xb2Zox2fDuudhjzhrk57Z3tGedr/u
ednruqf3b6Lh3ev6m/rxPhOfjR6vZwN/NfF+1fhHd3yp9tdzWaRJT6oXowe1
aBOPSG9Kj1GveJQSPlKTqc30wOz/1YxDm2hAtaScJ/ep4fR61HiHNtGEaj89
o8WaaDi9JD0lz8bkTL2m82vyQQ/T/Xpezf6WM9xf59TwhR6wz294E39Gz1k9
oiZTC85QotX0YNomHorejPrg6hLNo/a5soY75VD7kX5dvVuixFu6oob75ED7
cz2avk08Gr0bPZXSxJPRa9Hj+acXj0Xv51b3eC8cIBfcUsMFcpRcpQfUa+Lh
6A3Zk5/WpCe3V1ejvEV8cYl20XPSr9KP0oval/U3iS8iLn3CsWqtFUq49yl+
11e9fN+zSjjc7zN/iXYzhzw/mLMkt56o0TJqGvX+U9a4XjwQ+5cna/pTPU37
AzW12nnUTms/y/rNvXi49rNP12gRNYl+wXi8ftmLprxSfa1GId6D+NQ2Ne49
8OUltU8Oehd8WQk3WfPeAV9aUgvViGrFa0q0p5r1bfAlJVr2zhqt4x51r6pp
BoMHlmgdzwR2b9Jj/HdWUKMNTynRWrfV5L41QG14c01tsQZYC9QEausTSrSC
mkBtfXyJVrAHUEufWtIbfFujTcw5c09N+gb4ghKt+gV44V5qnLVOTaD2Pa5E
K6iZ1M7DSrSUPYNa4LSSXkKN/zr4vBLt/31NLptz5t53Nblujpvr9ixy/ekl
vcxnNVwjJ8lNavTh4PNL7z/t/mmNvyonyU2f13CXNcHaoIZ7Gnxyibb7uqY2
W9Ot7V/V1HJrtrXbM8/R3J9NzkJvqOE2a5L796qa2mcNNB9vrOE6OVAuvL2G
W+RoufqOGi6Sc+Sem2pqtRwpV95Vo23VwGrha2pqrXvAvXBdTW21Rlorv6zR
GmoQtcisbXo7ezbv92xtejd7QO/f7G16QXtMe83ru/1mzbZ2P1/jj3qmoL9z
bU0ttuZb++2B7KWWK+mNNuzy71Dw2eBnavwcPXL9NM9QPPvS0/RsZcE2+02N
aH4MqeEiOUPuOKSGq+QcuWfhNs9fjWm+ncr6zL2cWVq/9NAnb+J56q0v1Ga/
qRHMR88cZmmyJzyLOLiGy+RAuXCBNvlkT2k+zt9mf9iDyWdztdnf9qT2pofW
cLWcKrfO2abXswe0F5yjTW9nD2gv6D25uck99V5ZDzyDKR0/yokPN/mbcuWF
NVpETWK/cjF4xV48CvWnHoC9/99NvIEza/htpq5+nl3Tj3mmar94Rk199MxP
vX1aTe21Bqu3z6rRSuaH/fzpNXrMM3j190U13oieiv2dnvLITc6o9Jo9oxqx
yZmFZxeX1GghNZF679Ku3ukxqx8983mxCafILXoiSxFPXOKVXM7c+r2ccXvW
fVmNFlGT2A/p2T/UpF/Wy5+3Dd/YQ8tPc7fhNz0F+WWeNvxnTy8/PFrjdehx
6HU8VuNF6IHohTxU0+t6Bqpf9EiNd6EmVBsu0uXnlnze4/xb4Et68TT0No6u
0VfjdnzxcFc/7KHtpY+q0auegXt+82CNn+UZqn7UPTVaUw2kFnquphe1J9Uv
1xP17Nn/Z3ivq0mXNMlBa9UDNb2tPa5+1f3gU3vp6e3t767RVmo4tdy9NV6A
Glete19N769HoFdweI2/6RmH51F+51ObfCfvxRE1fqhn2p5fnVjjD3lGox+q
R6XX9U0T7+qkGj/D/7nQPx1Ws5/9HxHPkw6ruV4No5YZWqNl1EhqJT2zEf3u
Tby0U2r0vP/zoP4/oUZP+j8MnkcdW9NfegbiedLxNf2n/yPi+dSRNX6xZ/ie
jx1X03/6PyWeV51co8f9nxD95P8D7vG4ug==
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRmEcwPHD636XlAxkkoFRBkYZmCQDGxkYKBObMvAX8BewktgVm/v7
ut8lyW1xv8bnKcP3fJ46T+/5Pee8FV0Drf1JURSN6lVh/ahLzSVHUQEXWc4N
1vCUDXxgC7/ZyexYFPWxlMOs4jjrOMkmTrOdC+zhMvd5zXcl9Kx7rRhmm6vc
4Rp3uc69MA/3uckDbvGQcSZ0ZL3NY+7whLs85R7PwrN5zhlnuOGHLvQSzqcR
s8U5yCV2c55tnGIjJ1jLMVZyiCXsZSY7+On3m3nHeh6zOpyJZWEu+674pnw9
hb0qNl8ei5jLQuaEPcxmLrPCu2cmM5iuDOvUsGaMaeHbMpW/StFPuKcvGSOa
dbn9/x/8AUGnSbk=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 981, 473, 689, 1089, 897, 691, 1090, 898, 692, 1091, 
       899, 693, 1092, 900, 694, 1093, 901, 695, 1094, 902, 696, 1095, 986, 
       1187, 697, 1096, 903, 698, 1097, 904, 699, 1098, 905, 700, 1099, 906, 
       701, 1100, 907, 702, 1086, 1101, 908, 982}], 
      Line3DBox[{704, 987, 1188, 703, 488, 705, 1102, 909, 706, 1103, 910, 
       707, 1104, 911, 708, 1105, 912, 709, 1106, 913, 710, 1107, 988, 1189, 
       711, 989, 1190, 712, 1108, 914, 713, 1109, 915, 714, 1110, 916, 715, 
       1111, 917, 716, 1112, 918, 717}], 
      Line3DBox[{719, 990, 1191, 718, 991, 1192, 720, 504, 721, 1113, 919, 
       722, 1114, 920, 723, 1115, 921, 724, 1116, 922, 725, 1117, 992, 1193, 
       726, 993, 1194, 727, 994, 1195, 728, 1118, 923, 729, 1119, 924, 730, 
       1120, 925, 731, 1121, 926, 732}], 
      Line3DBox[{734, 995, 1196, 733, 996, 1197, 735, 997, 1198, 736, 520, 
       737, 1122, 927, 738, 1123, 928, 739, 1124, 929, 740, 1125, 998, 1199, 
       741, 999, 1200, 742, 1000, 1201, 743, 1001, 1202, 744, 1126, 930, 745, 
       1127, 931, 746, 1128, 932, 747}], 
      Line3DBox[{749, 1002, 1203, 748, 1003, 1204, 750, 1004, 1205, 751, 1005,
        1206, 752, 536, 753, 1129, 933, 754, 1130, 934, 755, 1131, 1006, 1207,
        756, 1007, 1208, 757, 1008, 1209, 758, 1009, 1210, 759, 1010, 1211, 
       760, 1132, 935, 761, 1133, 936, 762}], 
      Line3DBox[{764, 1011, 1212, 763, 1012, 1213, 765, 1013, 1214, 766, 1014,
        1215, 767, 1015, 1216, 768, 552, 769, 1134, 937, 770, 1135, 1016, 
       1217, 771, 1017, 1218, 772, 1018, 1219, 773, 1019, 1220, 774, 1020, 
       1221, 775, 560, 776, 1136, 938, 777}], 
      Line3DBox[{106, 354, 107, 355, 108, 356, 109, 357, 110, 358, 111, 359, 
       112, 360, 113, 361, 362, 114, 363, 115, 364, 116, 365, 117, 366, 118, 
       367, 119, 368, 120}], 
      Line3DBox[{779, 1021, 1222, 778, 1022, 1223, 780, 1023, 1224, 781, 1024,
        1225, 782, 1025, 1226, 783, 1026, 1227, 784, 568, 785, 1137, 1027, 
       1228, 786, 1028, 1229, 787, 1029, 1230, 788, 1030, 1231, 789, 1031, 
       1232, 790, 1032, 1233, 791, 576, 792}], 
      Line3DBox[{794, 577, 793, 1138, 939, 795, 1139, 940, 796, 1140, 941, 
       797, 1141, 942, 798, 1142, 943, 799, 1143, 944, 800, 1144, 1033, 1234, 
       801, 1145, 945, 802, 1146, 946, 803, 1147, 947, 804, 1148, 948, 805, 
       1149, 949, 806, 1150, 950, 807}], 
      Line3DBox[{809, 1034, 1235, 808, 1035, 1236, 810, 1151, 951, 811, 1152, 
       952, 812, 1153, 953, 813, 1154, 954, 814, 1155, 955, 815, 1156, 1036, 
       1237, 816, 1037, 1238, 817, 1157, 956, 818, 1158, 957, 819, 1159, 958, 
       820, 1160, 959, 821, 1161, 960, 822}], 
      Line3DBox[{824, 1038, 1239, 823, 1039, 1240, 825, 1040, 1241, 826, 1162,
        961, 827, 1163, 962, 828, 1164, 963, 829, 1165, 964, 830, 1166, 1041, 
       1242, 831, 1042, 1243, 832, 1043, 1244, 833, 1167, 965, 834, 1168, 966,
        835, 1169, 967, 836, 1170, 968, 837}], 
      Line3DBox[{839, 1044, 1245, 838, 1045, 1246, 840, 1046, 1247, 841, 1047,
        1248, 842, 1171, 969, 843, 1172, 970, 844, 1173, 971, 845, 1174, 1048,
        1249, 846, 1049, 1250, 847, 1050, 1251, 848, 1051, 1252, 849, 1175, 
       972, 850, 1176, 973, 851, 1177, 974, 852}], 
      Line3DBox[{854, 1052, 1253, 853, 1053, 1254, 855, 1054, 1255, 856, 1055,
        1256, 857, 1056, 1257, 858, 1178, 975, 859, 1179, 976, 860, 1180, 
       1057, 1258, 861, 1058, 1259, 862, 1059, 1260, 863, 1060, 1261, 864, 
       1061, 1262, 865, 1181, 977, 866, 1182, 978, 867}], 
      Line3DBox[{869, 1062, 1263, 868, 1063, 1264, 870, 1064, 1265, 871, 1065,
        1266, 872, 1066, 1267, 873, 1067, 1268, 874, 1183, 979, 875, 1184, 
       1068, 1269, 876, 1069, 1270, 877, 1070, 1271, 878, 1071, 1272, 879, 
       1072, 1273, 880, 1073, 1274, 881, 1185, 980, 882}], 
      Line3DBox[{896, 985, 1288, 1088, 895, 1287, 1085, 894, 1286, 1084, 893, 
       1285, 1083, 892, 1284, 1082, 891, 1283, 1081, 890, 1282, 1080, 1186, 
       889, 1281, 1079, 888, 1280, 1078, 887, 1279, 1077, 886, 1278, 1076, 
       885, 1277, 1075, 884, 1276, 1074, 883, 1087, 1275, 983, 984}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1089, 252, 488, 280, 1192, 503, 295, 1197, 518, 
       310, 1204, 533, 325, 1213, 548, 340, 1223, 563, 355, 578, 1138, 370, 
       1236, 593, 385, 1240, 608, 400, 1246, 623, 415, 1254, 638, 430, 1264, 
       653, 445, 1276, 668, 460}], 
      Line3DBox[{253, 475, 1090, 254, 489, 1102, 281, 504, 296, 1198, 519, 
       311, 1205, 534, 326, 1214, 549, 341, 1224, 564, 356, 579, 1139, 371, 
       594, 1151, 386, 1241, 609, 401, 1247, 624, 416, 1255, 639, 431, 1265, 
       654, 446, 1277, 669, 461}], 
      Line3DBox[{255, 476, 1091, 256, 490, 1103, 282, 505, 1113, 297, 520, 
       312, 1206, 535, 327, 1215, 550, 342, 1225, 565, 357, 580, 1140, 372, 
       595, 1152, 387, 610, 1162, 402, 1248, 625, 417, 1256, 640, 432, 1266, 
       655, 447, 1278, 670, 462}], 
      Line3DBox[{257, 477, 1092, 258, 491, 1104, 283, 506, 1114, 298, 521, 
       1122, 313, 536, 328, 1216, 551, 343, 1226, 566, 358, 581, 1141, 373, 
       596, 1153, 388, 611, 1163, 403, 626, 1171, 418, 1257, 641, 433, 1267, 
       656, 448, 1279, 671, 463}], 
      Line3DBox[{259, 478, 1093, 260, 492, 1105, 284, 507, 1115, 299, 522, 
       1123, 314, 537, 1129, 329, 552, 344, 1227, 567, 359, 582, 1142, 374, 
       597, 1154, 389, 612, 1164, 404, 627, 1172, 419, 642, 1178, 434, 1268, 
       657, 449, 1280, 672, 464}], 
      Line3DBox[{261, 479, 1094, 262, 493, 1106, 285, 508, 1116, 300, 523, 
       1124, 315, 538, 1130, 330, 553, 1134, 345, 568, 360, 583, 1143, 375, 
       598, 1155, 390, 613, 1165, 405, 628, 1173, 420, 643, 1179, 435, 658, 
       1183, 450, 1281, 673, 465}], 
      Line3DBox[{263, 480, 1095, 265, 494, 1107, 286, 509, 1117, 301, 524, 
       1125, 316, 539, 1131, 331, 554, 1135, 346, 569, 1137, 361, 584, 1144, 
       376, 599, 1156, 391, 614, 1166, 406, 629, 1174, 421, 644, 1180, 436, 
       659, 1184, 451, 674, 1186, 466}], 
      Line3DBox[{267, 482, 1096, 268, 1190, 496, 288, 1194, 511, 303, 1200, 
       526, 318, 1208, 541, 333, 1218, 556, 348, 1229, 571, 363, 586, 1145, 
       378, 1238, 601, 393, 1243, 616, 408, 1250, 631, 423, 1259, 646, 438, 
       1270, 661, 453, 1283, 676, 468}], 
      Line3DBox[{269, 483, 1097, 270, 497, 1108, 289, 1195, 512, 304, 1201, 
       527, 319, 1209, 542, 334, 1219, 557, 349, 1230, 572, 364, 587, 1146, 
       379, 602, 1157, 394, 1244, 617, 409, 1251, 632, 424, 1260, 647, 439, 
       1271, 662, 454, 1284, 677, 469}], 
      Line3DBox[{271, 484, 1098, 272, 498, 1109, 290, 513, 1118, 305, 1202, 
       528, 320, 1210, 543, 335, 1220, 558, 350, 1231, 573, 365, 588, 1147, 
       380, 603, 1158, 395, 618, 1167, 410, 1252, 633, 425, 1261, 648, 440, 
       1272, 663, 455, 1285, 678, 470}], 
      Line3DBox[{273, 485, 1099, 274, 499, 1110, 291, 514, 1119, 306, 529, 
       1126, 321, 1211, 544, 336, 1221, 559, 351, 1232, 574, 366, 589, 1148, 
       381, 604, 1159, 396, 619, 1168, 411, 634, 1175, 426, 1262, 649, 441, 
       1273, 664, 456, 1286, 679, 471}], 
      Line3DBox[{275, 486, 1100, 276, 500, 1111, 292, 515, 1120, 307, 530, 
       1127, 322, 545, 1132, 337, 560, 352, 1233, 575, 367, 590, 1149, 382, 
       605, 1160, 397, 620, 1169, 412, 635, 1176, 427, 650, 1181, 442, 1274, 
       665, 457, 1287, 680, 472}], 
      Line3DBox[{277, 682, 683, 1101, 278, 501, 1112, 293, 516, 1121, 308, 
       531, 1128, 323, 546, 1133, 338, 561, 1136, 353, 576, 368, 591, 1150, 
       383, 606, 1161, 398, 621, 1170, 413, 636, 1177, 428, 651, 1182, 443, 
       666, 1185, 458, 1288, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1275, 444, 652, 1263, 429, 637, 1253, 414, 
       622, 1245, 399, 607, 1239, 384, 592, 1235, 369, 577, 354, 562, 1222, 
       339, 547, 1212, 324, 532, 1203, 309, 517, 1196, 294, 502, 1191, 279, 
       487, 1188, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1282, 452, 660, 1269, 437, 645, 1258, 422, 630, 
       1249, 407, 615, 1242, 392, 600, 1237, 377, 585, 1234, 362, 570, 1228, 
       347, 555, 1217, 332, 540, 1207, 317, 525, 1199, 302, 510, 1193, 287, 
       495, 1189, 266, 481, 1187, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
tiy2b8ZW/u9ziL8J/hUbwb/6P4MSpi8=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 274.64110177271476`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.1, 0.7}, {0.1, 0.5}, {0.1835487421318817, 
   0.33803107401712257`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.8358895952545655`, -0.8951342686142083, 1.6144549683033493`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6924792129862432`*^9, 3.69247933413344*^9, {3.692484431057282*^9, 
   3.692484442873869*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.692301502100746*^9, 3.6923015929120502`*^9}, {
  3.6923028442527523`*^9, 3.692302844724307*^9}, {3.692303010504397*^9, 
  3.692303015168201*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
      RowBox[{"v", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}]}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Sanity", " ", "check"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "V", "]"}]}], "}"}]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], "+", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], 
    "]"}]}]}]}], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.692301545868034*^9, 3.692301579938443*^9, 3.692302620275457*^9, 
   3.692303464831684*^9, 3.692303512748547*^9, 3.692303574821097*^9, {
   3.692309303617404*^9, 3.692309317256071*^9}, 3.692309852713036*^9, 
   3.692311183337804*^9, 3.692360827116701*^9, 3.6924604335680227`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xtmp", "=", 
   RowBox[{"-", "0.1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ytmp", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"etmp", "=", 
   RowBox[{"et", "[", 
    RowBox[{"xtmp", ",", "ytmp", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]tmp", "=", 
   RowBox[{"\[Rho]", "[", 
    RowBox[{"xtmp", ",", "ytmp", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"utmp", " ", "=", " ", 
  RowBox[{"u", "[", 
   RowBox[{"xtmp", ",", "ytmp", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vtmp", " ", "=", " ", 
   RowBox[{"v", "[", 
    RowBox[{"xtmp", ",", "ytmp", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"p", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.4", "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"etmp", " ", "-", " ", 
        RowBox[{"0.5", " ", "\[Rho]tmp", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"utmp", "^", "2"}], "+", 
           RowBox[{"vtmp", "^", "2"}]}], ")"}]}]}], ")"}], 
      "\[IndentingNewLine]", "p"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.4", "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"etmp", " ", "-", " ", 
        RowBox[{"0.5", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Rho]tmp", " ", "utmp"}], ")"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Rho]tmp", " ", "vtmp"}], ")"}], "^", "2"}]}], ")"}], 
          "/", "\[Rho]tmp"}]}]}], ")"}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.692461089027128*^9, 3.692461165615685*^9}, {
   3.692461205823938*^9, 3.69246139155543*^9}, {3.692461940187114*^9, 
   3.692461942953207*^9}, 3.692462275196123*^9, 3.692462834850113*^9, {
   3.692463330359482*^9, 3.692463369574901*^9}, {3.6926474399277773`*^9, 
   3.692647488502944*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"x", ",", "y", ",", "0"}], "]"}], ",", "x"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "xtmp"}]}], "/.", 
  RowBox[{"y", "\[Rule]", "ytmp"}]}]], "Input",
 CellChangeTimes->{{3.69264762393036*^9, 3.692647677616953*^9}}],

Cell[BoxData["0.0004419640213419615`"], "Output",
 CellChangeTimes->{
  3.692462275550858*^9, 3.692462839084684*^9, 3.6924633701892643`*^9, 
   3.692647492778974*^9, {3.692647641519559*^9, 3.6926476779354153`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["vtmp"], "Input",
 CellChangeTimes->{{3.6926475163401747`*^9, 3.692647516957551*^9}}],

Cell[BoxData["0.14997558049391851`"], "Output",
 CellChangeTimes->{3.692647517685747*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operators for the Navier-Stokes equations", "Section",
 CellChangeTimes->{{3.692146461049478*^9, 3.692146472713237*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalL]c", "[", 
   RowBox[{"U_", ",", "\[Rho]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"\[Rho]", ",", "t"}], "]"}], " ", "+", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Rho]", " ", 
        RowBox[{"U", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.692146528337801*^9, 3.692146563048514*^9}, {
   3.692209739038363*^9, 3.692209762399822*^9}, {3.692209796047526*^9, 
   3.6922098350065327`*^9}, 3.692302521097423*^9, {3.692302894082449*^9, 
   3.692302929737975*^9}, {3.692303037776373*^9, 3.6923030397681026`*^9}, {
   3.6923098481982*^9, 3.692309850276622*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Tau]", "[", 
   RowBox[{"i_Integer", ",", "j_Integer", ",", "\[Mu]_", ",", "U_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Mu]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "+", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"2", "/", "3"}], "\[Mu]", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "U", "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.69230111442702*^9, 3.69230119384766*^9}, {
   3.692302460082685*^9, 3.692302465266346*^9}, 3.692302532633622*^9, {
   3.6923025790645027`*^9, 3.692302611607833*^9}, {3.6923026509435177`*^9, 
   3.6923026534312563`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "[", 
   RowBox[{"i_Integer", ",", "k_", ",", "T_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "k"}], " ", 
   RowBox[{"D", "[", 
    RowBox[{"T", ",", 
     RowBox[{"X", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.69230183569839*^9, 3.692301866770132*^9}, {
   3.69230245695411*^9, 3.692302457914034*^9}, 3.692302537159544*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalL]m", "[", 
   RowBox[{"i_Integer", ",", "U_", ",", "p_", ",", "\[Rho]_", ",", "\[Mu]_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"\[Rho]", " ", 
      RowBox[{"U", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", "t"}], "]"}], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"U", "[", 
       RowBox[{"[", "j", "]"}], "]"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}], " ", "-", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Tau]", "[", 
        RowBox[{"i", ",", "j", ",", "\[Mu]", ",", "U"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}], " ", "+", " ", 
   RowBox[{"D", "[", 
    RowBox[{"p", ",", 
     RowBox[{"X", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6923020800861797`*^9, 3.6923021953583107`*^9}, {
   3.692302449347131*^9, 3.6923024519450893`*^9}, 3.692302540457756*^9, {
   3.692309803357295*^9, 3.692309815542816*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalL]e", "[", 
   RowBox[{"U_", ",", "et_", ",", "\[Rho]_", ",", "T_", ",", "\[Mu]_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"et", ",", "t"}], "]"}], " ", "+", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "et"}], " ", ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "U", "]"}]}], "}"}]}], "]"}], " ", "-", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", 
          RowBox[{"\[Tau]", "[", 
           RowBox[{"i", ",", "j", ",", "\[Mu]", ",", "U"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "U", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "U", "]"}]}], "}"}]}], "]"}], " ", "+", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"q", "[", 
        RowBox[{"i", ",", "k", ",", "T"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6922981513709917`*^9, 3.692298165028521*^9}, {
   3.6923012525426598`*^9, 3.692301254046476*^9}, {3.6923012913660088`*^9, 
   3.6923013574203978`*^9}, {3.692301418427244*^9, 3.692301428835466*^9}, {
   3.692301610135921*^9, 3.692301616631794*^9}, {3.692301723965222*^9, 
   3.692301764396781*^9}, {3.692301807892076*^9, 3.692301832915687*^9}, {
   3.69230187347543*^9, 3.6923019094201307`*^9}, 3.692302544450042*^9, {
   3.692309824365672*^9, 3.692309831150791*^9}, {3.692310199703924*^9, 
   3.692310204119597*^9}, {3.692310243088152*^9, 3.692310245092372*^9}, 
   3.692310584033011*^9, {3.6924604255666847`*^9, 3.692460429566584*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Determining source terms which must be added to the governing equations\
\>", "Section",
 CellChangeTimes->{{3.6921465904950447`*^9, 3.692146604694528*^9}, {
  3.692297593118267*^9, 3.6922975939586363`*^9}, {3.692310433538081*^9, 
  3.6923104348268003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sc", "=", 
  RowBox[{
   RowBox[{"\[ScriptCapitalL]c", "[", 
    RowBox[{"V", ",", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.692296798928104*^9, 3.692296832179591*^9}, {
   3.692296962363563*^9, 3.692296976866938*^9}, 3.692297568742814*^9, 
   3.692303744849822*^9, {3.6923093403906927`*^9, 3.692309340805956*^9}}],

Cell[BoxData[
 RowBox[{"\[Rho]0", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"v0", " ", "y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            SuperscriptBox["y", "2"]}], ")"}]}], "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "v0", " ", "y", " ", "\[Epsilon]"}], "+", 
       RowBox[{"u0", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}], "+", 
       RowBox[{"4", " ", "u0", " ", "x", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",\

 CellChangeTimes->{{3.692309314895568*^9, 3.692309317335044*^9}, 
   3.6923093600734587`*^9, 3.692309852923929*^9, 3.692311183511138*^9, 
   3.6923608273483877`*^9, 3.6924604337675457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Smx", "=", 
  RowBox[{
   RowBox[{"\[ScriptCapitalL]m", "[", 
    RowBox[{"1", ",", "V", ",", 
     RowBox[{"p", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "\[Mu]"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.692302803537188*^9, 3.692302827496553*^9}, {
  3.692309864213533*^9, 3.692309868836801*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"u0", " ", "v0", " ", "y"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"et0", "-", 
          RowBox[{
           SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}]}], ")"}], " ", 
        "\[Rho]0"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "]"}], "2"]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["v0", "2"], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Rho]0", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "]"}], "3"]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{"v0", "-", 
          RowBox[{"4", " ", "u0", " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"2", " ", "u0", " ", "x", " ", "y"}], "-", 
          RowBox[{"3", " ", "u0", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], " ", "\[Mu]"}], "-", 
       RowBox[{"9", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"et0", "-", 
          RowBox[{
           SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}]}], ")"}], " ", 
        "\[Rho]0"}], "-", 
       RowBox[{"6", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"et0", "-", 
          RowBox[{
           SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}]}], ")"}], " ", 
        "\[Rho]0", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", 
        SuperscriptBox["u0", "2"], " ", "x", " ", "\[Epsilon]"}], "+", 
       RowBox[{"2", " ", "u0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "v0", " ", "y", " ", "\[Epsilon]"}], "-", 
          RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
       RowBox[{"4", " ", "v0", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"2", " ", "y"}]}], ")"}], " ", "y", " ", "\[Mu]"}], "-", 
       RowBox[{"3", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "et0"}], "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}], "+", 
             RowBox[{
              SuperscriptBox["u0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], ")"}], 
        " ", "\[Rho]0"}], "+", 
       RowBox[{"3", " ", "x", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["u0", "2"]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["v0", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["u0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"4", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}], " ", 
           "\[Rho]0"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["u0", "2"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["v0", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Rho]0", 
           " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.692302828024496*^9, 3.692303476034994*^9, 3.6923035354987097`*^9, 
   3.6923035903851643`*^9, 3.692309323376031*^9, {3.692309853762665*^9, 
   3.6923098722813253`*^9}, 3.692311185083535*^9, 3.6923608337331*^9, 
   3.692460440206005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Smy", "=", 
  RowBox[{
   RowBox[{"\[ScriptCapitalL]m", "[", 
    RowBox[{"2", ",", "V", ",", 
     RowBox[{"p", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "\[Mu]"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.69230359482572*^9, 3.692303617524783*^9}, {
  3.692309876813293*^9, 3.692309879739997*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"6", " ", "y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"et0", "-", 
       RowBox[{
        SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}]}], ")"}], " ", 
     "\[Rho]0", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "]"}], "2"]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["v0", "2"], " ", "y", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Rho]0", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "]"}], "3"]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "6"}], " ", "v0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u0", " ", "x"}], "+", 
          RowBox[{"v0", " ", "y"}]}], ")"}], " ", "\[Epsilon]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"7", " ", "v0"}], "+", 
          RowBox[{"2", " ", "u0", " ", "x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "x"}], "+", "y"}], ")"}]}]}], ")"}], 
        " ", "\[Mu]"}], "-", 
       RowBox[{"9", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"et0", "-", 
          RowBox[{
           SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}]}], ")"}], " ", 
        "\[Rho]0"}], "-", 
       RowBox[{"6", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u0", " ", "v0", " ", "x"}], "+", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"et0", "-", 
             RowBox[{
              SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}]}], ")"}], " ", 
           "\[Rho]0"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"u0", "+", 
          RowBox[{"v0", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["x", "2"]}], "-", 
             RowBox[{"2", " ", "x", " ", "y"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}], 
       "+", 
       RowBox[{"3", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "et0"}], "-", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["v0", "2"], " ", "\[Epsilon]"}], "+", 
             RowBox[{
              SuperscriptBox["u0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}]}], ")"}], 
        " ", "\[Rho]0"}], "+", 
       RowBox[{"3", " ", "y", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["v0", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["v0", "2"]}], "-", 
             RowBox[{
              SuperscriptBox["u0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"4", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}], " ", 
           "\[Rho]0"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["u0", "2"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["v0", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Rho]0", 
           " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.6923036924888077`*^9, 3.692309329501967*^9, 
  3.692309853876001*^9, 3.692309884973792*^9, 3.692311188935493*^9, 
  3.6923608400980463`*^9, 3.692460446124906*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Se", "=", 
  RowBox[{
   RowBox[{"\[ScriptCapitalL]e", "[", 
    RowBox[{"V", ",", 
     RowBox[{"et", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
     RowBox[{"T", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "\[Mu]"}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6923036234757547`*^9, 3.692303664608901*^9}, 
   3.692309568508779*^9, {3.692309892293322*^9, 3.69230989705214*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"3", " ", "R"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "et0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "R", " ", "u0", " ", "x"}], "+", 
          RowBox[{"4", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["u0", "2"], "-", 
             RowBox[{
              SuperscriptBox["v0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
          RowBox[{"R", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "7"}], " ", 
              SuperscriptBox["u0", "2"]}], "+", 
             RowBox[{"2", " ", "u0", " ", "v0", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"x", " ", "y"}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["y", "2"]}]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["v0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["x", "2"]}], "-", 
                RowBox[{"2", " ", "x", " ", "y"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}], ")"}]}]}], ")"}], " ", 
           "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "et0", " ", "R", " ", "u0", " ", "x"}], "+", 
       RowBox[{"6", " ", "k", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["u0", "2"], "-", 
          SuperscriptBox["v0", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
       RowBox[{"2", " ", "R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u0", " ", "v0"}], "+", 
          RowBox[{
           SuperscriptBox["u0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["x", "2"]}], "+", 
             RowBox[{"2", " ", "x", " ", "y"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["y", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["v0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["x", "2"]}], "-", 
             RowBox[{"2", " ", "x", " ", "y"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}], ")"}]}]}], ")"}], " ", 
        "\[Mu]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"et0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "12"}], " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
          RowBox[{"3", " ", "R", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "u0", " ", "x", " ", "\[Epsilon]"}], "+", 
             RowBox[{"v0", " ", "y", " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"2", " ", "\[Epsilon]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"2", " ", "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["v0", "2"], "+", 
             RowBox[{
              SuperscriptBox["u0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
          RowBox[{"R", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "7"}], " ", 
              SuperscriptBox["v0", "2"]}], "+", 
             RowBox[{"2", " ", "u0", " ", "v0", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["x", "2"]}], "-", 
                RowBox[{"x", " ", "y"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["u0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "8"}], " ", 
                 SuperscriptBox["x", "2"]}], "+", 
                RowBox[{"4", " ", "x", " ", "y"}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["y", "2"]}]}], ")"}]}]}], ")"}], " ", 
           "\[Mu]"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["u0", "2"], "-", 
             SuperscriptBox["v0", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "-", 
          RowBox[{"R", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "et0", " ", "v0", " ", "y"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"7", " ", 
                 SuperscriptBox["u0", "2"]}], "-", 
                RowBox[{"7", " ", 
                 SuperscriptBox["v0", "2"]}], "+", 
                RowBox[{"8", " ", "u0", " ", "v0", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["x", "2"], "-", 
                   RowBox[{"x", " ", "y"}], "+", 
                   SuperscriptBox["y", "2"]}], ")"}]}]}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.692309359704945*^9, 3.692309571137281*^9, 
  3.692309853997005*^9, 3.6923098994400377`*^9, 3.692310356516279*^9, 
  3.692310594365883*^9, 3.692311193297659*^9, 3.692360841962644*^9, 
  3.692460447682878*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "against", " ", "Appendix", " ", "D", " ", "of", " ", 
    "document", " ", "from", " ", "Sandia"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Sc", "\[Equal]", 
    RowBox[{"\[Rho]0", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v0", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
               RowBox[{"x", "^", "2"}], "+", 
               RowBox[{"y", "^", "2"}]}], ")"}]}], "]"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Omega]", " ", "t"}], "+", " ", 
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
          RowBox[{"x", "^", "2"}], " ", "+", " ", 
          RowBox[{"y", "^", "2"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]", "+", 
          RowBox[{"3", " ", "u0", " ", "x"}], " ", "+", " ", 
          RowBox[{"2", " ", "\[Epsilon]", " ", "u0", " ", "x"}], " ", "+", 
          " ", 
          RowBox[{"2", " ", "\[Epsilon]", " ", "v0", " ", "y"}], " ", "+", 
          " ", 
          RowBox[{"4", " ", "u0", " ", "x", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
             RowBox[{"x", "^", "2"}], " ", "+", " ", 
             RowBox[{"y", "^", "2"}]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], "//",
    "FullSimplify"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6922969845416307`*^9, 3.692297105633317*^9}, {
  3.692297152159954*^9, 3.69229717301668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Converting source terms to Fortran form and writing to files", "Section",
 CellChangeTimes->{{3.692310661773809*^9, 3.6923106729575977`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "cfname", "=", "\"\</share/codes/cns2d/misc/source_continuity\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mxfname", "=", "\"\</share/codes/cns2d/misc/source_xmom\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myfname", "=", "\"\</share/codes/cns2d/misc/source_ymom\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"etfname", "=", "\"\</share/codes/cns2d/misc/source_et\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "ecfname", "=", "\"\</share/codes/cns2d/misc/exact_continuity\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emxfname", "=", "\"\</share/codes/cns2d/misc/exact_xmom\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emyfname", "=", "\"\</share/codes/cns2d/misc/exact_ymom\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eetfname", "=", "\"\</share/codes/cns2d/misc/exact_et\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dudxfn", "=", "\"\</share/codes/cns2d/misc/exact_dudx\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dudyfn", "=", "\"\</share/codes/cns2d/misc/exact_dudy\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dvdxfn", "=", "\"\</share/codes/cns2d/misc/exact_dvdx\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dvdyfn", "=", "\"\</share/codes/cns2d/misc/exact_dvdy\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dTdxfn", "=", "\"\</share/codes/cns2d/misc/exact_dTdx\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dTdyfn", "=", "\"\</share/codes/cns2d/misc/exact_dTdy\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.692310932523938*^9, 3.692311000935762*^9}, {
  3.692311247500228*^9, 3.692311265851555*^9}, {3.692312890057571*^9, 
  3.692312910209855*^9}, {3.692360630772264*^9, 3.692360682578413*^9}}],

Cell[CellGroupData[{

Cell["Writing source terms", "Subsection",
 CellChangeTimes->{{3.692360698777549*^9, 3.6923607029772043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sc", "=", 
   RowBox[{"OpenWrite", "[", "cfname", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"sc", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"FortranForm", "[", "Sc", "]"}], "/.", 
     RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "/.", 
    RowBox[{"\[Rho]0", "\[Rule]", "rho0"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "sc", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smx", "=", 
   RowBox[{"OpenWrite", "[", "mxfname", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"smx", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FortranForm", "[", "Smx", "]"}], "/.", 
       RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "/.", 
      RowBox[{"\[Rho]0", "\[Rule]", "rho0"}]}], "/.", 
     RowBox[{"\[Mu]", "\[Rule]", "mu"}]}], "/.", 
    RowBox[{"\[Gamma]", "\[Rule]", "g"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "smx", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smy", "=", 
   RowBox[{"OpenWrite", "[", "myfname", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"smy", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FortranForm", "[", "Smy", "]"}], "/.", 
       RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "/.", 
      RowBox[{"\[Rho]0", "\[Rule]", "rho0"}]}], "/.", 
     RowBox[{"\[Mu]", "\[Rule]", "mu"}]}], "/.", 
    RowBox[{"\[Gamma]", "\[Rule]", "g"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "smy", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smet", "=", 
   RowBox[{"OpenWrite", "[", "etfname", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"smet", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FortranForm", "[", "Se", "]"}], "/.", 
       RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "/.", 
      RowBox[{"\[Rho]0", "\[Rule]", "rho0"}]}], "/.", 
     RowBox[{"\[Mu]", "\[Rule]", "mu"}]}], "/.", 
    RowBox[{"\[Gamma]", "\[Rule]", "g"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "smet", "]"}]}], "Input",
 CellChangeTimes->{{3.692310980006712*^9, 3.692311027655764*^9}, {
  3.692311177868136*^9, 3.692311181084763*^9}, {3.6923112924109163`*^9, 
  3.692311322217877*^9}, {3.692311354826799*^9, 3.692311355801689*^9}, {
  3.692313266402792*^9, 3.692313274939026*^9}}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/source_continuity\"\>"], "Output",
 CellChangeTimes->{3.6923132862991667`*^9, 3.692360842018587*^9, 
  3.6924604477521563`*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/source_xmom\"\>"], "Output",
 CellChangeTimes->{3.6923132862991667`*^9, 3.692360842018587*^9, 
  3.692460447753455*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/source_ymom\"\>"], "Output",
 CellChangeTimes->{3.6923132862991667`*^9, 3.692360842018587*^9, 
  3.692460447754241*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/source_et\"\>"], "Output",
 CellChangeTimes->{3.6923132862991667`*^9, 3.692360842018587*^9, 
  3.6924604477550783`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Writing exact solutions", "Subsection",
 CellChangeTimes->{{3.692360708888775*^9, 3.692360711936975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "ecfname", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{"FortranForm", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", 
     RowBox[{"\[Rho]0", "\[Rule]", "rho0"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "emxfname", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{"FortranForm", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", 
     RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "emyfname", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{"FortranForm", "[", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", 
     RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "eetfname", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{"FortranForm", "[", 
    RowBox[{"et", "[", 
     RowBox[{"x", ",", "y", ",", "t"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "dudxfn", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{
    RowBox[{"FortranForm", "[", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], "]"}], "/.", 
    RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "dudyfn", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{
    RowBox[{"FortranForm", "[", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}], "]"}], "/.", 
    RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "dvdxfn", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{
    RowBox[{"FortranForm", "[", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], "]"}], "/.", 
    RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "dvdyfn", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{
    RowBox[{"FortranForm", "[", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}], "]"}], "/.", 
    RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "dTdxfn", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"FortranForm", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"T", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], "]"}], "/.", 
     RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "/.", 
    RowBox[{"\[Gamma]", "\[Rule]", "g"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"OpenWrite", "[", "dTdyfn", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"s", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"FortranForm", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"T", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}], "]"}], "/.", 
     RowBox[{"\[Epsilon]", "\[Rule]", "eps"}]}], "/.", 
    RowBox[{"\[Gamma]", "\[Rule]", "g"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "s", "]"}]}], "Input",
 CellChangeTimes->{{3.692311242253282*^9, 3.6923112432753*^9}, {
  3.692312926545072*^9, 3.692312949977309*^9}, {3.69231299777626*^9, 
  3.692313010167783*^9}, {3.692313089254229*^9, 3.692313149645274*^9}, {
  3.6923131857565613`*^9, 3.692313236755763*^9}, {3.692360714737954*^9, 
  3.692360821647244*^9}, {3.6923611154832*^9, 3.6923611268250027`*^9}}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_continuity\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.69246044778469*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_xmom\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.692460447785614*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_ymom\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.6924604477865753`*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_et\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.692460447787423*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_dudx\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.692460447788248*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_dudy\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.692460447789158*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_dvdx\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.6924604477897863`*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_dvdy\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.692460447790277*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_dTdx\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.692460447790766*^9}],

Cell[BoxData["\<\"/share/codes/cns2d/misc/exact_dTdy\"\>"], "Output",
 CellChangeTimes->{3.692313227148179*^9, 3.692313287726604*^9, 
  3.692360842035256*^9, 3.692361130565117*^9, 3.692460447791263*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{941, 1158},
WindowMargins->{{Automatic, 11}, {11, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 142, 2, 33, "Input"],
Cell[CellGroupData[{
Cell[725, 26, 106, 1, 65, "Section"],
Cell[834, 29, 1369, 32, 253, "Input"],
Cell[2206, 63, 364, 9, 33, "Input"],
Cell[2573, 74, 216, 6, 33, "Input"],
Cell[2792, 82, 3442, 102, 180, "Input"],
Cell[CellGroupData[{
Cell[6259, 188, 551, 14, 33, "Input"],
Cell[6813, 204, 81392, 1337, 290, "Output"]
}, Open  ]],
Cell[88220, 1544, 284, 7, 33, "Input"],
Cell[CellGroupData[{
Cell[88529, 1555, 1010, 33, 55, "Input"],
Cell[89542, 1590, 334, 5, 31, "Output"]
}, Open  ]],
Cell[89891, 1598, 2057, 59, 187, "Input"],
Cell[CellGroupData[{
Cell[91973, 1661, 326, 9, 33, "Input"],
Cell[92302, 1672, 214, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92553, 1680, 98, 1, 33, "Input"],
Cell[92654, 1683, 89, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92792, 1690, 126, 1, 65, "Section"],
Cell[92921, 1693, 938, 23, 34, "Input"],
Cell[93862, 1718, 1282, 36, 56, "Input"],
Cell[95147, 1756, 412, 11, 34, "Input"],
Cell[95562, 1769, 1487, 42, 78, "Input"],
Cell[97052, 1813, 2328, 58, 78, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99417, 1876, 268, 5, 101, "Section"],
Cell[CellGroupData[{
Cell[99710, 1885, 441, 10, 33, "Input"],
Cell[100154, 1897, 1348, 39, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101539, 1941, 451, 11, 33, "Input"],
Cell[101993, 1954, 5221, 151, 215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107251, 2110, 450, 11, 33, "Input"],
Cell[107704, 2123, 5262, 156, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113003, 2284, 539, 13, 33, "Input"],
Cell[113545, 2299, 7484, 208, 278, "Output"]
}, Open  ]],
Cell[121044, 2510, 1935, 50, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123016, 2565, 147, 1, 65, "Section"],
Cell[123166, 2568, 1877, 47, 333, "Input"],
Cell[CellGroupData[{
Cell[125068, 2619, 110, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[125203, 2624, 2413, 62, 275, "Input"],
Cell[127619, 2688, 169, 2, 33, "Output"],
Cell[127791, 2692, 161, 2, 31, "Output"],
Cell[127955, 2696, 161, 2, 33, "Output"],
Cell[128119, 2700, 161, 2, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128329, 2708, 111, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[128465, 2713, 5121, 146, 671, "Input"],
Cell[133589, 2861, 207, 2, 33, "Output"],
Cell[133799, 2865, 202, 2, 31, "Output"],
Cell[134004, 2869, 204, 2, 33, "Output"],
Cell[134211, 2873, 200, 2, 31, "Output"],
Cell[134414, 2877, 202, 2, 31, "Output"],
Cell[134619, 2881, 202, 2, 33, "Output"],
Cell[134824, 2885, 204, 2, 31, "Output"],
Cell[135031, 2889, 202, 2, 33, "Output"],
Cell[135236, 2893, 202, 2, 31, "Output"],
Cell[135441, 2897, 202, 2, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

