I now have the gradient calculation.  It seems to be correct.
Now, I believe that I should go through and reconstruct the
states on each face according to

u^L_{i,j+1/2} = u_{i,j} + (grad(u) . rvec) phi(r)

where r = (grad(u) . rvec)_L / (grad(u) . rvec)_R

This will construct the interface states which will
then be used to solve the Riemann problem using Roe's
approximate scheme.

After that, all I need to do is change the
update subroutine so that the fluxes from all the interfaces
are accounted for in the computation of the residual.  Then,
I need to implement boundary conditions.  I'm going to need
slip wall and farfield for now probably.  Then, the Euler
solver should be done.

Something is wrong... I'm getting negative densities after
the first step which is causing NaNs.  I need to double
check the conversions from primitive to conservative,
reconstruction and switch from the barth limiter to the
minmod limiter.  There is a good explanation of the minmod
limiter in Leveque's book.

It seems that the information is not being communicated from
the farfield boundaries.  The fluxes aren't changing, which
indicates that the boundary condition is being enforced,
and it seems that the reconstruction is working okay...
When I print out reconstructed values, they seem reasonable.
One idea is to hardwire the reconstruction for the cartesian
grid case being solved.  Then I might be able to figure out
if the reconstruction is what is causing the issue.

The sign on some of the fluxes was wrong.  Now, the farfield
boundaries seem wrong.  It is because I am changing the sign
of the fluxes in the final loop.  I need to change the enforcement
of the farfield boundary conditions so that they use the inward pointing face normal!!!!!

Added Barth-Jespersen limiter formulation using their original
paper.  Something is wrong though because I get NaNs after the
first few timesteps.

I've tracked down the NaNs to the residual_inv subroutine.
When using RK4 to march in time, the NaNs arise after the first
stage of the RK4 process.  There must be something inside the select
case that is screwing things up.  This doesn't happen if the limiter
is set to "none".  The limiter variable phi is always real and finite.
I removed the multiplication by phi in the reconstruction step and
I'm still getting NaNs after the first stage of RK4.  This leads me
to believe that there is some unintended side-effect happening in the
code.  I need to find the side-effect and remove it.  I know that it is
isolated to the portion of the select case that matches "barth".

It seems that something about the slope limited reconstruction
causes the Riemann solver to return NaNs for the fluxes....  I'm
not sure how or why this is happening.  I've gotta figure out how
to implement the minmod slope limiter instead.  This is strange because
the limiter is returning between 0 and 1 at all times.  I printed out
the values and everything seemed reasonable.  I'm not sure why the
Riemann solver is returning NaNs.

12-22-2016
I believe the NaNs are coming about as a result of the slip wall
boundary condition.  I need to add another boundary condition which
strongly enforcing the slip wall bc.  This should be do-able
by setting up another boundary condition option.  I can't find anything
wrong with the Euler or RK4 time stepping.  I can't find anything
wrong with the slope-limited reconstruction...  I don't know what is
wrong.

12-23-2016 - 12:46 pm
I fixed some of the NaNs.  There were bugs in the barth limiter portion
of the code.  The barth limiter now works properly it seems.
I tried the barth limiter on the isentropic vortex case.  It works,
but is very diffusive.  The bugs were associated with copying the
code I wrote for the barth limiter and not changing some of the edges_v
to edges_h. The problem now is that the timestep I have to use is very small.
Also, it seems that when I get NaNs, they come from the horizontal interfaces.
I'm not sure what exactly is happening.  To try to fix it I am going to
finish implementing strong enforcement of slip wall BCs to all boundaries.

